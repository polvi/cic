#!/bin/bash

set -e
# Standard generator setup, they take three arguments but allow none too.
if [[ $# -ne 1 ]]; then
    echo "$0 <name>"
    exit 1
fi

MACH=$1
ROOT=/tmp/coreception

BASE=${ROOT}/${MACH}
BASE=$(echo $BASE | sed 's:/$::')
MP_ROOT="${BASE}/root/"
# strip double slashes
# strip leading and trailing slashes, then switch / to - for systemd naming
NAME=$(echo $MP_ROOT | sed 's:^/::')
NAME=$(echo $NAME | sed 's:/$::')
NAME=$(echo $NAME | sed 's:/:-:g')
MUNIT="${NAME}.mount"

# mount unit
UNIT="[Unit]
Requires=${NAME}.service
After=${NAME}.service
PartOf=cic-${MACH}.service
BindsTo=cic-${MACH}.service

[Mount]
What=none
Where=${MP_ROOT}
Type=aufs
Options=br=${BASE}/rw:/"
echo "${UNIT}" > /var/run/systemd/system/${NAME}.mount

# unit to setup workdir
UNIT="[Unit]
Requires=${NAME}-cleanup.service

[Service]
ExecStart=/bin/mkdir -p $BASE/rw
Type=oneshot"
echo "${UNIT}" > /var/run/systemd/system/${NAME}.service

#ExecStart=/usr/bin/systemd-nspawn --capability=CAP_CHOWN,CAP_DAC_OVERRIDE,CAP_DAC_READ_SEARCH,CAP_FOWNER,CAP_FSETID,CAP_KILL,CAP_SETGID,CAP_SETUID,CAP_SETPCAP,CAP_LINUX_IMMUTABLE,CAP_NET_BIND_SERVICE,CAP_NET_BROADCAST,CAP_NET_ADMIN,CAP_NET_RAW,CAP_IPC_LOCK,CAP_IPC_OWNER,CAP_SYS_MODULE,CAP_SYS_RAWIO,CAP_SYS_CHROOT,CAP_SYS_PTRACE,CAP_SYS_PACCT,CAP_SYS_ADMIN,CAP_SYS_BOOT,CAP_SYS_NICE,CAP_SYS_RESOURCE,CAP_SYS_TIME,CAP_SYS_TTY_CONFIG,CAP_MKNOD,CAP_LEASE,CAP_AUDIT_WRITE,CAP_AUDIT_CONTROL,CAP_SETFCAP,CAP_MAC_OVERRIDE,CAP_MAC_ADMIN,CAP_SYSLOG -M ${MACH} -D ${MP_ROOT} /usr/bin/wrapdocker"
#ExecStart=/usr/bin/systemd-nspawn --capability=CAP_NET_ADMIN -M ${MACH} -D ${MP_ROOT} /usr/bin/wrapdocker"
# nspawn unit
UNIT="[Unit]
Requires=${NAME}.mount
After=${NAME}.mount

[Service]
Type=notify
ExecStartPre=/bin/mkdir ${MP_ROOT}/var/run
ExecStartPre=/bin/mkdir -p ${MP_ROOT}/var/lib/docker
ExecStartPre=/bin/mount -t btrfs /dev/loop2 ${MP_ROOT}/var/lib/docker
ExecStartPre=/bin/mount -t tmpfs none ${MP_ROOT}/var/run
ExecStartPre=/bin/cp /var/run/resolv.conf ${MP_ROOT}/var/run/resolv.conf
ExecStartPre=/bin/cp /home/core/cic/wrapdocker ${MP_ROOT}/usr/bin/wrapdocker
ExecStopPost=/bin/umount ${MP_ROOT}/var/run
ExecStopPost=/bin/umount ${MP_ROOT}/var/lib/docker
ExecStart=/usr/bin/systemd-nspawn --capability=CAP_NET_ADMIN,CAP_MKNOD -M ${MACH} -D ${MP_ROOT} /usr/bin/wrapdocker"
N_UNIT="cic-${MACH}.service"
echo "${UNIT}" > /var/run/systemd/system/${N_UNIT}

UNIT="[Unit]
BindTo=${NAME}.mount
# use before so it is shut down after the mount
Before=${NAME}.mount

[Service]
ExecStart=/bin/bash -c \"while true; do sleep 10000; done\"
ExecStopPost=/bin/rm -rf $BASE"
echo "${UNIT}" > /var/run/systemd/system/${NAME}-cleanup.service

systemctl start cic-$MACH.service
# this is some weird race that needs to be reported to systemd
sleep .1
LEADER=$(machinectl status $MACH | grep Leader | awk '{print $2}')
nsenter -t $LEADER -m -u -i -p -n
